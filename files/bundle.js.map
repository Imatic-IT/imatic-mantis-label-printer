{"version":3,"file":"bundle.js","mappings":";;;;;;AAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAuB,CAAC;AACrF,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAuB,CAAC;AAEtF,IAAI,SAAS,IAAI,aAAa,EAAE,CAAC;IAC7B,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACzC,CAAC;AAGD,MAAM,gCAAgC,GAAG,QAAQ,CAAC,cAAc,CAAC,4BAA4B,CAAqB,CAAC;AACnH,MAAM,0BAA0B,GAAG,QAAQ,CAAC,gBAAgB,CAAmB,mCAAmC,CAAC,CAAC;AAGpH,IAAI,gCAAgC,EAAE,CAAC;IACnC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC;IAE7C,gCAAgC,CAAC,QAAQ,GAAG,GAAG,EAAE;QAE7C,MAAM,OAAO,GAAG,gCAAgC,CAAC,OAAO,CAAC;QAEzD,0BAA0B,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC1C,QAAQ,CAAC,OAAO,GAAG,OAAO;QAC9B,CAAC,CAAC,CAAC;IAEP,CAAC;AAEL,CAAC","sources":["webpack://@imatic/whisperer/./src/index.ts"],"sourcesContent":["const newButton = document.querySelector(\"#printLabelsButton\") as HTMLElement | null;\nconst widgetToolbox = document.querySelector(\".widget-toolbox\") as HTMLElement | null;\n\nif (newButton && widgetToolbox) {\n    widgetToolbox.appendChild(newButton);\n}\n\n\nconst assignTemplateSelectAllVCheckbox = document.getElementById('assign_template_select_all') as HTMLInputElement;\nconst assignedProjectsCheckboxes = document.querySelectorAll<HTMLInputElement>('input[name=\"assigned_projects[]\"]');\n\n\nif (assignTemplateSelectAllVCheckbox) {\n    console.log(assignTemplateSelectAllVCheckbox)\n\n    assignTemplateSelectAllVCheckbox.onchange = () => {\n\n        const checked = assignTemplateSelectAllVCheckbox.checked;\n\n        assignedProjectsCheckboxes.forEach(checkbox => {\n            checkbox.checked = checked\n        });\n\n    }\n\n}\n"],"names":[],"sourceRoot":""}